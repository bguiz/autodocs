'use strict';

var envVar = require('../environment-variables');

/**
 * @class  PublishGithubPages
 * @module  AutodocsPublish
 */

/**
 * Initialisation step for Github Pages
 *
 * Used to check/ set any Github Pages environment variables
 *
 * @method  init
 * @for  PublishGithubPages
 */
function environmentVariablesGithub() {
  /**
   * @property GH_TOKEN
   * @type String (Environment Variable)
   * @default None - throws when not set
   */
  envVar.require('GH_TOKEN');

  /**
   * @property REPO_SLUG
   * @type String (Environment Variable)
   * @default None - throws when not set
   */
  envVar.require('REPO_SLUG');

  if (!envVar.exists('GH_USER') ||
      !envVar.exists('GH_REPO')) {
    var tokens = process.env.REPO_SLUG.split('/');
    /**
     * @property GH_USER
     * @type String (Environment Variable)
     * @default First half of `REPO_SLUG`
     */
    envVar.default('GH_USER', tokens[0]);
    /**
     * @property GH_REPO
     * @type String (Environment Variable)
     * @default Second half of `REPO_SLUG`
     */
    envVar.default('GH_REPO', tokens[1]);
  }
}

/**
 * Performs the required steps for publishing to Github pages
 *
 * - runs `npm run generatedocs`
 * - `git fetch`es the `gh-pages` branch of the project into a throwaway git repository
 * - copies the documentation generated by the `generatedocs` script into the `gh-pages` branch
 * - copies any additional files required into the gh-pages branch
 * - if any files have changed, `git commit`s `git push`es on the `gh-pages` branch
 *   - this is when the files actually succeed in publishing
 * - if necessary, cleans up the throwaway git repository
 *
 * @method run
 * @for  PublishGithubPages
 */
function publishGithubPages() {
  var childProcess = require('child_process');
  var script = childProcess.spawn(__dirname+'/github-pages.sh', [], {
    stdio: 'inherit',
  });
  script.on('close', function(code) {
    process.exit(code);
  });
}

module.exports = {
  init: environmentVariablesGithub,
  run: publishGithubPages,
};

